variables:
  PROD_VERSION: 3-2-15
  dockerTag: '$CI_BUILD_REF'
  DOCKER_REPO: registry:5000
  IMAGE_BASE_NAME: slogan
  STAGE_SERVER: 192.168.9.148
  RUNHOME: /home/gitlab-runner
 
#  IMAGE: $DOCKER_REPO/$IMAGE_BASE_NAME:$CI_BUILD_REF


image: docker:stable


#before_script:
#  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#  - mkdir -p ~/.ssh
#  - echo "$STAGE_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
#  - chmod 700 ~/.ssh/id_rsa
#  - eval "$(ssh-agent -s)"
#  - ssh-add ~/.ssh/id_rsa
#  - ssh-keyscan -t rsa $STAGE_SERVER > ~/.ssh/known_hosts
#  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#  - chmod 644 ~/.ssh/known_hosts


stages:
  - build
#  - test
#  - r12n
#  - dp2stage

services:
  - docker:dind

before_script:
#  - apt-get update -y && apt-get install py-pip python3-dev libffi-dev openssl-dev gcc libc-dev make
#  - python -m pip install --upgrade pip
  - apk update 
  - apk add py-pip python3-dev libffi-dev openssl-dev gcc libc-dev make
  - pip install --upgrade pip
#  - pip install docker-compose
#
#


BuildImg:
  stage: build
  tags:
#    - sloganim
    - slogan6
  script:
#    - docker build -t $IMAGE_BASE_NAME .
    - COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build
    - docker images
#    - echo OkOk

#Test:
#  stage: test
#  tags:
#    - slogan6
#  script:
#    - docker run --rm -e nicname="joe" $IMAGE_BASE_NAME | grep "Hi"

    

#RecordImg:
#  variables:
#    RELEASE_IMAGE: $DOCKER_REPO/$IMAGE_BASE_NAME:latest
#  stage: r12n
#  tags:
#    - slogan6
#  script:
##    - docker tag $IMAGE_BASE_NAME $IMAGE
##    - echo $IMAGE
#    - docker tag $IMAGE_BASE_NAME $DOCKER_REPO/$IMAGE_BASE_NAME:${PROD_VERSION}_$(echo $CI_BUILD_REF | cut -c 1-8)
#    - echo $DOCKER_REPO/$IMAGE_BASE_NAME:${PROD_VERSION}_$(echo $CI_BUILD_REF | cut -c 1-8 )
##
#    - docker push $DOCKER_REPO/$IMAGE_BASE_NAME:${PROD_VERSION}_$(echo $CI_BUILD_REF | cut -c 1-8 )
##
##    - docker push $IMAGE      
#    - docker tag $IMAGE_BASE_NAME $RELEASE_IMAGE 
#    - docker push $RELEASE_IMAGE      
##
##    - echo $PROD_VERSION    
##    - echo $DOCKER_REPO/$IMAGE_BASE_NAME:${PROD_VERSION}_$(echo $CI_BUILD_REF | cut -c 1-7 )
#
##
##
#Deploy2stage:
#  variables:
#    RELEASE_IMAGE: $DOCKER_REPO/$IMAGE_BASE_NAME:latest
#  stage: dp2stage
#  tags:
#    - slogan6
#  script:
##    - echo 123
##    - echo $RELEASE_IMAGE
##    - ssh deploy@192.168.9.148  "sudo -u deploy docker pull $RELEASE_IMAGE"
##    - ssh -o StrictHostKeyChecking=no deploy@192.168.9.148  "docker pull registry:5000/slogan:latest"
#    - ssh deploy@$STAGE_SERVER  "docker pull registry:5000/slogan:latest"
##    - ansible-playbook -i $RUNHOME/ahosts $RUNHOME/get_latest.yml --extra-vars "image=$RELEASE_IMAGE"
#
       